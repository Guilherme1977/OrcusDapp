{"ast":null,"code":"var _jsxFileName = \"/Users/sergeimasliukov/Desktop/Projects/RKO-APP/orcus-dapp/src/pages/Dashboard/tvl-chart/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, XAxis, YAxis } from 'recharts';\nimport { useWindowScale } from '../../../hooks';\nimport { AreaChartWrapper, DateData, Text, TVLChartWrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  value: 0,\n  xAxis: '05',\n  yAxis: 14000\n}, {\n  value: 10000,\n  xAxis: '06',\n  yAxis: 15000\n}, {\n  value: 1555,\n  xAxis: '07',\n  yAxis: 16000\n}, {\n  value: 12000,\n  xAxis: '08',\n  yAxis: 17000\n}, {\n  value: 4564,\n  xAxis: '09',\n  yAxis: 18000\n}, {\n  value: 17000,\n  xAxis: '10',\n  yAxis: 19000\n}, {\n  value: 5000,\n  xAxis: '11',\n  yAxis: 20000\n}];\n\nconst TVLChart = () => {\n  _s();\n\n  const currentChartMargin = useWindowScale();\n  return /*#__PURE__*/_jsxDEV(TVLChartWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"TVL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"$ 1,68b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateData, {\n      children: \"Jul 11, 2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AreaChartWrapper, {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: data,\n          margin: currentChartMargin,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: '#BDBDBD'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            axisLine: false,\n            tickLine: false,\n            dataKey: \"yAxis\",\n            stroke: '#9299B1',\n            fontSize: '0.729vw'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            width: '100%',\n            dataKey: \"xAxis\",\n            axisLine: false,\n            tickLine: false,\n            stroke: '#9299B1',\n            fontSize: '0.729vw'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            strokeWidth: '0.104vw',\n            dataKey: \"value\",\n            stroke: \"#767676\",\n            fill: \"rgba(180, 180, 180, 0.2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TVLChart, \"PggASoR5v72bRxPXYqILknJihLo=\", false, function () {\n  return [useWindowScale];\n});\n\n_c = TVLChart;\nexport default TVLChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVLChart\");","map":{"version":3,"sources":["/Users/sergeimasliukov/Desktop/Projects/RKO-APP/orcus-dapp/src/pages/Dashboard/tvl-chart/index.jsx"],"names":["React","Area","AreaChart","CartesianGrid","ResponsiveContainer","XAxis","YAxis","useWindowScale","AreaChartWrapper","DateData","Text","TVLChartWrapper","data","value","xAxis","yAxis","TVLChart","currentChartMargin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nimport { useWindowScale } from '../../../hooks';\r\nimport { AreaChartWrapper, DateData, Text, TVLChartWrapper } from './styled';\r\n\r\nconst data = [\r\n  { value: 0, xAxis: '05', yAxis: 14000 },\r\n  { value: 10000, xAxis: '06', yAxis: 15000 },\r\n  { value: 1555, xAxis: '07', yAxis: 16000 },\r\n  { value: 12000, xAxis: '08', yAxis: 17000 },\r\n  { value: 4564, xAxis: '09', yAxis: 18000 },\r\n  { value: 17000, xAxis: '10', yAxis: 19000 },\r\n\r\n  { value: 5000, xAxis: '11', yAxis: 20000 },\r\n];\r\n\r\nconst TVLChart = () => {\r\n  const currentChartMargin = useWindowScale();\r\n\r\n  return (\r\n    <TVLChartWrapper>\r\n      <Text>TVL</Text>\r\n      <Text>\r\n        <b>$ 1,68b</b>\r\n      </Text>\r\n      <DateData>Jul 11, 2021</DateData>\r\n      <AreaChartWrapper>\r\n        <ResponsiveContainer width='100%' height='100%'>\r\n          <AreaChart data={data} margin={currentChartMargin}>\r\n            <CartesianGrid stroke={'#BDBDBD'} />\r\n            <YAxis\r\n              axisLine={false}\r\n              tickLine={false}\r\n              dataKey='yAxis'\r\n              stroke={'#9299B1'}\r\n              fontSize={'0.729vw'}\r\n            />\r\n            <XAxis\r\n              width={'100%'}\r\n              dataKey='xAxis'\r\n              axisLine={false}\r\n              tickLine={false}\r\n              stroke={'#9299B1'}\r\n              fontSize={'0.729vw'}\r\n            />\r\n            <Area\r\n              type='monotone'\r\n              strokeWidth={'0.104vw'}\r\n              dataKey='value'\r\n              stroke='#767676'\r\n              fill='rgba(180, 180, 180, 0.2)'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </AreaChartWrapper>\r\n    </TVLChartWrapper>\r\n  );\r\n};\r\n\r\nexport default TVLChart;\r\n"]},"metadata":{},"sourceType":"module"}